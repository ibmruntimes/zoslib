###############################################################################
# Licensed Materials - Property of IBM
# ZOSLIB
# (C) Copyright IBM Corp. 2021. All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication
# or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
###############################################################################

config("zoslib_config") {
}

shared_library("zoslib") {
  output_name = "zoslib"

  include_dirs = [
    "include",
  ]
  sources = [
    "include/csrsic.h",
    "include/edcwccwi.h",
    "include/zos.h",
    "include/zos-base.h",
    "include/zos-bpx.h",
    "include/zos-char-util.h",
    "include/zos-getentropy.h",
    "include/zos-io.h",
    "include/zos-savstack.h",
    "include/zos-semaphore.h",
    "include/zos-sys-info.h",
    "include/zos-tls.h",
    "src/zos.cc",
    "src/zos-bpx.cc",
    "src/zos-char-util.cc",
    "src/zos-getentropy.cc",
    "src/zos-io.cc",
    "src/zos-locale.cc",
    "src/zos-mkdtemp.c",
    "src/zos-mount.c",
    "src/zos-semaphore.cc",
    "src/zos-spawn.cc",
    "src/zos-string.c",
    "src/zos-sys-info.cc",
    "src/zos-tls.cc",
  ]

  configs += [ ":zoslib_config" ]

  # Undefine ZOSLIB_ALIGNED_NEWDEL so libzoslib.so isn't affected by the
  # overridden new and delete operators when zoslib is built as part of a
  # project that defines the macro.
  cflags = [
    "-UZOSLIB_ALIGNED_NEWDEL",
  ]
}

static_library("zoslib_alnewdel") {
  output_name = "zoslib_alnewdel"

  include_dirs = [
    "include-wrappers/c++",
  ]
  sources = [
    "src/alnewdel/zos-aligned-newdel.cc",
  ]
  configs += [ ":zoslib_config" ]
}
