.TH "include/zos-sys-info.h" 3 "zoslib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/zos-sys-info.h
.SH SYNOPSIS
.br
.PP
\fC#include 'zos\-macros\&.h'\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBZOSCCT\fP"
.br
.ti -1c
.RI "struct \fBZOSRMCT\fP"
.br
.ti -1c
.RI "struct \fBZOSRCE\fP"
.br
.ti -1c
.RI "struct \fBZOSCVT\fP"
.br
.ti -1c
.RI "struct \fBZOSPSA\fP"
.br
.ti -1c
.RI "struct \fBZOSPCCA\fP"
.br
.ti -1c
.RI "struct \fBZOSPCCAVT\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBZOSCPU_MODEL_LENGTH\fP   4"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBZOSCCT\fP \fBZOSCCT_t\fP"
.br
.ti -1c
.RI "typedef struct \fBZOSRMCT\fP \fBZOSRMCT_t\fP"
.br
.ti -1c
.RI "typedef struct \fBZOSRCE\fP \fBZOSRCE_t\fP"
.br
.ti -1c
.RI "typedef struct \fBZOSCVT\fP \fBZOSCVT_t\fP"
.br
.ti -1c
.RI "typedef struct \fBZOSPSA\fP \fBZOSPSA_t\fP"
.br
.ti -1c
.RI "typedef struct \fBZOSPCCA\fP \fBZOSPCCA\fP"
.br
.ti -1c
.RI "typedef struct \fBZOSPCCAVT\fP \fBZOSPCCAVT\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBoslvl_t\fP { \fBZOSLVL_V1R13\fP = 0, \fBZOSLVL_V2R1\fP, \fBZOSLVL_V2R2\fP, \fBZOSLVL_V2R3\fP, \fBZOSLVL_V2R4\fP, \fBZOSLVL_V2R5\fP, \fBZOSLVL_V3R1\fP, \fBZOSLVL_UNKNOWN\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fB__Z_EXPORT\fP int \fB__get_num_online_cpus\fP (void)"
.br
.ti -1c
.RI "\fB__Z_EXPORT\fP int \fB__get_num_frames\fP (void)"
.br
.ti -1c
.RI "\fB__Z_EXPORT\fP \fBoslvl_t\fP \fB__get_os_level\fP (void)"
.br
.ti -1c
.RI "\fB__Z_EXPORT\fP bool \fB__is_os_level_at_or_above\fP (\fBoslvl_t\fP level)"
.br
.ti -1c
.RI "\fB__Z_EXPORT\fP bool \fB__is_stfle_available\fP ()"
.br
.ti -1c
.RI "\fB__Z_EXPORT\fP bool \fB__is_vxf_available\fP ()"
.br
.ti -1c
.RI "\fB__Z_EXPORT\fP bool \fB__is_vef1_available\fP ()"
.br
.ti -1c
.RI "\fB__Z_EXPORT\fP char * \fB__get_cpu_model\fP (char *buffer, size_t size)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define ZOSCPU_MODEL_LENGTH   4"

.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBZOSCCT\fP \fBZOSCCT_t\fP"

.SS "typedef struct \fBZOSCVT\fP \fBZOSCVT_t\fP"

.SS "typedef struct \fBZOSPCCA\fP \fBZOSPCCA\fP"

.SS "typedef struct \fBZOSPCCAVT\fP \fBZOSPCCAVT\fP"

.SS "typedef struct \fBZOSPSA\fP \fBZOSPSA_t\fP"

.SS "typedef struct \fBZOSRCE\fP \fBZOSRCE_t\fP"

.SS "typedef struct \fBZOSRMCT\fP \fBZOSRMCT_t\fP"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBoslvl_t\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIZOSLVL_V1R13 \fP\fP
.TP
\fB\fIZOSLVL_V2R1 \fP\fP
.TP
\fB\fIZOSLVL_V2R2 \fP\fP
.TP
\fB\fIZOSLVL_V2R3 \fP\fP
.TP
\fB\fIZOSLVL_V2R4 \fP\fP
.TP
\fB\fIZOSLVL_V2R5 \fP\fP
.TP
\fB\fIZOSLVL_V3R1 \fP\fP
.TP
\fB\fIZOSLVL_UNKNOWN \fP\fP
.SH "Function Documentation"
.PP 
.SS "\fB__Z_EXPORT\fP char * __get_cpu_model (char * buffer, size_t size)"
Gets the 4 character CPU model of the system, including the null terminating character\&. Truncated if buffer size is too small\&.
.PP
\fBParameters\fP
.RS 4
\fIbuffer\fP pointer to the buffer where the cpu model is to be stored 
.br
\fIsize\fP the size of the buffer 
.RE
.PP
\fBReturns\fP
.RS 4
pointer to the buffer\&. 
.RE
.PP

.SS "\fB__Z_EXPORT\fP int __get_num_frames (void)"
Get the number of frames currently available to the system 
.PP
\fBReturns\fP
.RS 4
returns the number of available frames 
.RE
.PP

.SS "\fB__Z_EXPORT\fP int __get_num_online_cpus (void)"
Get the number of online CPUs 
.PP
\fBReturns\fP
.RS 4
returns the number of online CPUs 
.RE
.PP

.SS "\fB__Z_EXPORT\fP \fBoslvl_t\fP __get_os_level (void)"
Get the OS level 
.PP
\fBReturns\fP
.RS 4
the OS level as ZOSLVL_V2R1/2/3/4/5 (values are in ascending order) 
.RE
.PP

.SS "\fB__Z_EXPORT\fP bool __is_os_level_at_or_above (\fBoslvl_t\fP level)"
Check if current OS is at or above a given level 
.PP
\fBReturns\fP
.RS 4
true if the current OS level is at or above the given level, and false otherwise 
.RE
.PP

.SS "\fB__Z_EXPORT\fP bool __is_stfle_available ()"
Check if STFLE (STORE FACILITY LIST EXTENDED) instruction is available 
.PP
\fBReturns\fP
.RS 4
true if the STFLE instruction is available 
.RE
.PP

.SS "\fB__Z_EXPORT\fP bool __is_vef1_available ()"
Check if the current z arch includes Vector Enhancements Facility 1 
.PP
\fBReturns\fP
.RS 4
true if Vector Enhancements Facility 1 instructions are available, and false otherwise 
.RE
.PP

.SS "\fB__Z_EXPORT\fP bool __is_vxf_available ()"
Check if the current z arch includes Vector Extension Facility 
.PP
\fBReturns\fP
.RS 4
true if Vector Extension Facility instructions are available, and false otherwise 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for zoslib from the source code\&.
