.TH "src/zos-getentropy.cc" 3 "zoslib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/zos-getentropy.cc
.SH SYNOPSIS
.br
.PP
\fC#include <errno\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <stddef\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include 'zos\-getentropy\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB_AE_BIMODAL\fP   1"
.br
.ti -1c
.RI "#define \fB_XOPEN_SOURCE\fP   600"
.br
.ti -1c
.RI "#define \fB_OPEN_SYS_FILE_EXT\fP   1"
.br
.ti -1c
.RI "#define \fB_OPEN_MSGQ_EXT\fP   1"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fB__getentropy\fP (void *output, size_t size)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define _AE_BIMODAL   1"

.SS "#define _OPEN_MSGQ_EXT   1"

.SS "#define _OPEN_SYS_FILE_EXT   1"

.SS "#define _XOPEN_SOURCE   600"

.SH "Function Documentation"
.PP 
.SS "int __getentropy (void * buffer, size_t length)"
Fill a buffer with random bytes 
.PP
\fBParameters\fP
.RS 4
\fIbuffer\fP to store random bytes to\&. 
.br
\fInumber\fP of random bytes to generate\&. 
.RE
.PP
\fBReturns\fP
.RS 4
On success, returns 0, or -1 on error\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for zoslib from the source code\&.
